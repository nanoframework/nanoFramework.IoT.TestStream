parameters:
  - name: appComponents
    displayName: "Component name"
    type: string

stages:
  - stage: Test_${{ replace(parameters.appComponents, '-', '_') }}
    dependsOn: Build
    displayName: Test for ${{ parameters.appComponents }}

    jobs:
      - job: CheckAgentCapability
        displayName: "Check if agent with ${{ parameters.appComponents }} capability exists"
        pool:
          name: LisaTestAgentPools
        steps:
          - script: |
              echo "Checking if agent with ${{ parameters.appComponents }} exists..."
              # Check if the agent has the required capability
              if [ -z "$(echo $(Agent.Capabilities.${{ parameters.appComponents }}))" ]; then
                echo "No agent found with capability ${{ parameters.appComponents }}"
                echo "##vso[task.complete result=Canceled;]Capability ${{ parameters.appComponents }} not found, canceling job."
              else
                echo "Agent with capability ${{ parameters.appComponents }} found."
                echo "##vso[task.setvariable variable=skipTest;isOutput=true]false"        
              fi

      - job: RunTest
        dependsOn: CheckAgentCapability
        condition: and(succeeded(), eq(dependencies.CheckAgentCapability.outputs['CheckAgentCapability.skipTest'], 'false'))
        displayName: "Run test for ${{ parameters.appComponents }}"
        pool:
          name: LisaTestAgentPools
          demands:
            - ${{ parameters.appComponents }}
        steps:
          - bash: |
              echo "Running test for ${{ parameters.appComponents }}"
              # Add your test script here
